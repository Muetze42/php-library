<?php

use Closure;
use Exception;
use Pdp\Domain as PdpDomain;
use Pdp\TopLevelDomains;

/**
 * @mixin \Illuminate\Support\Str
 */
class Domain
{
    /**
     * Get the domain without subdomain from a URL.
     */
    public function __invoke(): Closure
    {
        return function (string $url): string {
            if (!str_contains($url, '://')) {
                $url = 'https://' . $url;
            }

            try {
                $topLevelDomains = TopLevelDomains::fromPath(__DIR__ . 'tlds-alpha-by-domain.txt');
                $domain = PdpDomain::fromIDNA2008(parse_url($url, PHP_URL_HOST));

                $result = $topLevelDomains->resolve($domain);

                return $result->registrableDomain()->toString();
            } catch (Exception) {
                // Silent
            }

            $url = strtolower($url);

            $pieces = parse_url($url);
            $domain = $pieces['host'] ?? '';

            if (preg_match('/(?P<domain>[a-z0-9][a-z0-9\-]{1,63}\.[a-z.]{2,6})$/i', $domain, $regs)) {
                return $regs['domain'];
            }

            return $domain;
        };
    }
}
